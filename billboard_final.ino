#include "DHT.h"
#define  DHTPIN D4 
#include "DHT.h"
#define DHTPIN D4 
#define DHTTYPE DHT11   // DHT 11
#include <Adafruit_GFX.h>
#include <Adafruit_SPITFT.h>
#include <gfxfont.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

const char* ssid = "Redmi";
const char* password = "durgarajdd";

#define ORG "2soh8t"
#define DEVICE_TYPE "sovereigns"
#define DEVICE_ID "abcd"
#define TOKEN "abcde123"
String command;
char server[] = ORG ".messaging.internetofthings.ibmcloud.com";
char topic[] = "iot-2/cmd/home/fmt/String";
char authMethod[] = "use-token-auth";
char token[] = TOKEN;
char clientId[] = "d:" ORG ":" DEVICE_TYPE ":" DEVICE_ID;
//Serial.println(clientID);
#define OLED_RESET D5
void drawStr(uint8_t x, uint8_t y, char* str);
/* Object named display, of the class Adafruit_SSD1306 */
Adafruit_SSD1306 display(OLED_RESET);

#if (SSD1306_LCDHEIGHT != 64)
//#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif
char k[30],s[40];
DHT dht(DHTPIN, DHTTYPE);

WiFiClient wifiClient;
void callback(char* topic, byte* payload, unsigned int payloadLength);
PubSubClient client(server, 1883, callback, wifiClient);
// 'aits new cropped', 128x64px
const unsigned char myBitmap1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xe3, 0x64, 0xc6, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0x0d, 0xe1, 0xf2, 0x2c, 0xd9, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x02, 0x79, 0xf0, 0xfb, 0xe7, 0x90, 0x1c, 0xc0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0x19, 0x19, 0x88, 0x00, 0x00, 0x0f, 0x7c, 0x78, 0x0f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0x0f, 0x8c, 0x00, 0x04, 0x80, 0x00, 0x04, 0xc6, 0x03, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xfe, 0x03, 0xe4, 0x40, 0x3f, 0xff, 0xff, 0xfc, 0x01, 0x89, 0xf0, 0x7f, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0x31, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x12, 0x10, 0x1f, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x9d, 0x80, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x03, 0xe7, 0x07, 0xff, 0xff, 
  0xff, 0xff, 0x80, 0x66, 0x07, 0xff, 0xf0, 0x5f, 0xff, 0xff, 0xff, 0xf0, 0x1a, 0xc1, 0xff, 0xff, 
  0xff, 0xfe, 0x0e, 0x30, 0x3f, 0xff, 0xe2, 0x2f, 0xff, 0xff, 0xff, 0xfc, 0x07, 0x80, 0x7f, 0xff, 
  0xff, 0xf8, 0x18, 0xc1, 0xff, 0xff, 0xeb, 0x33, 0xff, 0xff, 0xff, 0xff, 0x86, 0x7c, 0x1f, 0xff, 
  0xff, 0xf0, 0x07, 0x87, 0xff, 0xff, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x78, 0x0f, 0xff, 
  0xff, 0xe1, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x33, 0x87, 0xff, 
  0xff, 0x80, 0x70, 0x7f, 0xff, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0x0c, 0x01, 0xff, 
  0xff, 0x0f, 0x20, 0xff, 0xff, 0x0f, 0xf0, 0x33, 0x3f, 0xff, 0xff, 0xf8, 0x07, 0x8c, 0x00, 0xff, 
  0xfe, 0x03, 0xc3, 0xff, 0xff, 0x83, 0xfc, 0xf1, 0x1f, 0xff, 0xff, 0xdf, 0xff, 0xc0, 0x08, 0x7f, 
  0xfc, 0x3f, 0x87, 0xff, 0xff, 0x40, 0x7c, 0x3c, 0x07, 0xff, 0xff, 0xbf, 0xff, 0xe0, 0x1c, 0x3f, 
  0xf8, 0x03, 0x0f, 0xff, 0xf9, 0xc0, 0x1c, 0x0f, 0x10, 0x3f, 0xff, 0x0f, 0xff, 0xf8, 0xe2, 0x1f, 
  0xf0, 0xfe, 0x1f, 0xff, 0xfe, 0x70, 0xc1, 0x00, 0x25, 0x1f, 0xff, 0x0f, 0xff, 0xfc, 0x07, 0x0f, 
  0xf0, 0x78, 0x3f, 0xff, 0xff, 0x9e, 0xd0, 0x00, 0x1b, 0x1f, 0x7f, 0xff, 0xff, 0xfe, 0x3d, 0x8f, 
  0xe0, 0x18, 0x7f, 0xff, 0xff, 0xf1, 0xfc, 0x1f, 0xc6, 0x4c, 0x0f, 0xff, 0xff, 0xfe, 0x0f, 0x87, 
  0xc0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x80, 0xf8, 0x4c, 0x93, 0xff, 0xff, 0xff, 0x10, 0xc3, 
  0xc7, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xe0, 0x00, 0x5f, 0xbb, 0xff, 0xff, 0xff, 0x8e, 0x03, 
  0x80, 0xe1, 0xff, 0xff, 0xff, 0xfe, 0x86, 0x11, 0xc0, 0x5f, 0xff, 0xff, 0xff, 0xff, 0x8d, 0xe1, 
  0x87, 0xe3, 0xff, 0xff, 0xff, 0xfe, 0xef, 0xa7, 0x80, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 
  0x83, 0xc3, 0xff, 0xff, 0xff, 0xfc, 0x8e, 0x09, 0xe3, 0x2f, 0x7f, 0xff, 0xff, 0xff, 0xc3, 0x71, 
  0x8f, 0xc7, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x0f, 0x88, 0x12, 0x7f, 0xff, 0xff, 0xff, 0xe6, 0xd1, 
  0x00, 0x47, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0x00, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x00, 
  0x1f, 0x87, 0xff, 0xff, 0xff, 0xfd, 0x20, 0x17, 0xe4, 0x03, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x18, 
  0x07, 0x87, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0x00, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xf8, 
  0x00, 0x47, 0xff, 0xff, 0xff, 0xff, 0xc8, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0x8b, 0x30, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0x86, 0x09, 0x59, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x83, 0x07, 0xff, 0xff, 0xff, 0xff, 0x88, 0xc9, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xc1, 
  0x87, 0x83, 0xff, 0xff, 0xff, 0xff, 0x04, 0x19, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xe1, 
  0x84, 0x83, 0xff, 0xff, 0xff, 0xff, 0x0d, 0xd9, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0x61, 
  0x80, 0x01, 0xff, 0xff, 0xff, 0xfe, 0x0e, 0xf9, 0x09, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 
  0xc0, 0x09, 0xff, 0xff, 0xff, 0xff, 0x07, 0xf1, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x03, 
  0xc0, 0x70, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xf0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1a, 0x43, 
  0xe1, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x3e, 0x87, 
  0xf0, 0x02, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x02, 0x08, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x63, 0x8f, 
  0xf0, 0x7c, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0x09, 0x18, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x1e, 0x0f, 
  0xf8, 0x07, 0x8f, 0xff, 0xff, 0xff, 0xfd, 0x59, 0xb0, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0xf0, 0x1f, 
  0xfc, 0x18, 0xc7, 0xff, 0xff, 0xff, 0xfe, 0x88, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x1c, 0x3f, 
  0xfe, 0x0f, 0xa3, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x00, 0x7f, 
  0xff, 0x00, 0x61, 0xff, 0xff, 0xff, 0xfc, 0x23, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xe0, 0xff, 
  0xff, 0x81, 0xf8, 0x7f, 0xff, 0xff, 0xe0, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3c, 0x01, 0xff, 
  0xff, 0xe0, 0x36, 0x1f, 0xff, 0xff, 0xc1, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x9f, 0x83, 0xff, 
  0xff, 0xf0, 0x60, 0xc7, 0xff, 0xff, 0xeb, 0xe4, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xcc, 0x0f, 0xff, 
  0xff, 0xf8, 0x1e, 0xc1, 0xff, 0xff, 0xe7, 0xe8, 0xff, 0xff, 0xff, 0xff, 0x87, 0xc0, 0x1f, 0xff, 
  0xff, 0xfe, 0x01, 0x9c, 0x3f, 0xff, 0xfe, 0x7b, 0xbf, 0xff, 0xff, 0xfe, 0x18, 0x30, 0x7f, 0xff, 
  0xff, 0xff, 0x81, 0x39, 0x0f, 0xff, 0xf8, 0x3c, 0x0f, 0xff, 0xff, 0xf1, 0x06, 0x01, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x4e, 0x00, 0xff, 0xff, 0xff, 0xd0, 0xbf, 0xff, 0x08, 0xce, 0x07, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0x08, 0x1e, 0x0f, 0xff, 0xff, 0xfa, 0x7f, 0xf0, 0x66, 0x60, 0x1f, 0xff, 0xff, 
  0xff, 0xff, 0xfe, 0x00, 0x2d, 0x10, 0x3f, 0xff, 0xff, 0xfe, 0x01, 0xb3, 0xc0, 0x7f, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0x36, 0x78, 0xc0, 0x0d, 0xc0, 0x00, 0xc0, 0xc0, 0x03, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0x01, 0xf9, 0x9e, 0x26, 0x7d, 0xf9, 0xe0, 0x40, 0x0f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xfe, 0x00, 0x1b, 0x62, 0x4f, 0x19, 0xf1, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x33, 0x9f, 0x18, 0xdd, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x10, 0x88, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// 'cocola image new cropped', 128x64px
const unsigned char myBitmap2 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x71, 0xff, 0xff, 0xff, 0xff, 0xff, 0x28, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x60, 0x20, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x0e, 0xa9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x0c, 0x08, 0x3b, 0xf7, 0xef, 0xff, 0xfc, 0x00, 0x80, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x33, 0x3f, 0xcf, 0x7f, 0xf8, 0x00, 0x80, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x38, 0x7f, 0x8c, 0xff, 0xfc, 0x00, 0x80, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x1f, 0xfd, 0x80, 0x1f, 0xe7, 0xef, 0x77, 0xfc, 0x00, 0x80, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0x7f, 0xfd, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x00, 0xff, 0xfd, 0xfc, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x08, 0xff, 0xfd, 0xff, 0x80, 0xff, 0xf7, 0xff, 0x01, 0xff, 0x00, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x01, 0xff, 0xfd, 0xff, 0xfc, 0x00, 0x10, 0x00, 0x7f, 0xff, 0x88, 0x60, 0x00, 0x0f, 
  0xf0, 0x00, 0x03, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0x47, 0xff, 0x07, 0x34, 0x3f, 0xff, 0x00, 0x0f, 
  0xf0, 0x00, 0x0f, 0xff, 0xf4, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xf0, 0x7f, 0xfe, 0x00, 0x0f, 
  0xf0, 0x00, 0x0f, 0xff, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x68, 0x7f, 0xfc, 0x00, 0x0f, 
  0xf0, 0x01, 0xdf, 0xdf, 0xf4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x40, 0x6f, 0xf8, 0x00, 0x0f, 
  0xf0, 0x07, 0xff, 0xc2, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x0f, 
  0xf0, 0x01, 0xff, 0xa8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x7a, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0xff, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x0f, 
  0xf0, 0x03, 0xff, 0x80, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x0f, 
  0xf0, 0x01, 0xff, 0x80, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0f, 
  0xf0, 0x03, 0xff, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 0xc8, 0x00, 0x00, 0x0f, 
  0xf0, 0x01, 0xff, 0x00, 0x01, 0x80, 0x3f, 0xff, 0xfe, 0x1f, 0xff, 0xf0, 0xc0, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfe, 0x1d, 0xfe, 0xf0, 0xc0, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0xff, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xb0, 0x80, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0xbf, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xf0, 0xc0, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0x3f, 0x30, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xd0, 0x4e, 0x80, 0x00, 0x0f, 
  0xf0, 0x00, 0x1f, 0x00, 0x01, 0xff, 0xff, 0xfb, 0xfd, 0xff, 0xfe, 0x70, 0x5e, 0xc0, 0x00, 0x0f, 
  0xf0, 0x00, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf7, 0xe7, 0xfe, 0x30, 0x50, 0x00, 0x00, 0x0f, 
  0xf0, 0x00, 0xfe, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x3a, 0xc0, 0x10, 0x10, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x39, 0xe0, 0x00, 0x10, 0x40, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0xe0, 0x00, 0x10, 0x40, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x3c, 0xe0, 0x00, 0x10, 0x20, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x18, 0xc1, 0xe0, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x04, 0xc0, 0x10, 0x00, 0x30, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x3f, 0xe0, 0x10, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x40, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x80, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// 'galaxy new cropped', 128x64px
const unsigned char myBitmap3 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x83, 0x0f, 0x06, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x06, 0x5f, 0x7c, 0xa5, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x04, 0xff, 0xf6, 0xa6, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x06, 0xef, 0x94, 0xe3, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xf6, 0xe5, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x9f, 0x7f, 0x47, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xe0, 0x00, 0x40, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xf8, 0x3c, 0x02, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xf0, 0x18, 0x03, 0x83, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xe3, 0xff, 0xff, 0xdf, 0xf7, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xe3, 0xdf, 0xfd, 0xfb, 0xbf, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x20, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x31, 0x1e, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xfe, 0xf0, 
  0x00, 0x08, 0x10, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 
  0x40, 0x0b, 0xff, 0xff, 0xff, 0xdc, 0xa0, 0x7f, 0xcf, 0xef, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 
  0x0b, 0xff, 0xff, 0xff, 0x00, 0x07, 0xfd, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x7d, 0xff, 0xff, 
  0xfb, 0xf8, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x07, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x07, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x81, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00
};
// 'smart1 new cropped', 128x64px
const unsigned char myBitmap4 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x3c, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3c, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x3c, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x18, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x08, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x88, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
  0x00, 0x00, 0xff, 0xc0, 0xfe, 0x3f, 0x80, 0xfc, 0x00, 0xff, 0xe0, 0x1e, 0x8f, 0xdf, 0xfa, 0x00, 
  0x00, 0x0f, 0xff, 0xf8, 0xff, 0xff, 0xe7, 0xff, 0x0f, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x1f, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x1f, 0xc1, 0x00, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xe0, 0xff, 0x3f, 0xff, 0x7f, 0xff, 0x00, 
  0x00, 0x1f, 0xff, 0xe0, 0xff, 0x07, 0xf8, 0x3f, 0xc0, 0x1f, 0xff, 0x3f, 0xe0, 0x1f, 0xe0, 0x00, 
  0x00, 0x0f, 0xff, 0xfc, 0xff, 0x07, 0xf8, 0x3f, 0xcf, 0xff, 0xff, 0x3f, 0xc0, 0x1f, 0xe0, 0x00, 
  0x00, 0x00, 0xff, 0xfe, 0xff, 0x07, 0xf8, 0x3f, 0xdf, 0xfc, 0x7f, 0x3f, 0xc0, 0x1f, 0xe0, 0x00, 
  0x00, 0x0f, 0xc0, 0xfe, 0xff, 0x07, 0xf8, 0x3f, 0xff, 0xc0, 0xff, 0x3f, 0xc0, 0x1f, 0xe0, 0x00, 
  0x00, 0x3f, 0xff, 0xfe, 0xff, 0x07, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xc0, 0x1f, 0xfe, 0x00, 
  0x00, 0x1f, 0xff, 0xfc, 0xff, 0x07, 0xf8, 0x3f, 0xdf, 0xff, 0xff, 0xbf, 0xc0, 0x0f, 0xff, 0x00, 
  0x00, 0x03, 0xff, 0xe0, 0xff, 0x07, 0xf8, 0x3f, 0xc7, 0xfe, 0x3f, 0xbf, 0xc0, 0x03, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x18, 0x16, 0x0a, 0x0e, 0x1c, 0x18, 0x30, 0xc0, 0x83, 0xc3, 0x60, 0x03, 0xc1, 0x83, 0x00, 
  0x00, 0x3c, 0x1e, 0x0c, 0x0e, 0x1c, 0x08, 0x30, 0xe0, 0x82, 0xc1, 0xe0, 0x82, 0xc1, 0x83, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};




void setup() {
  display.clearDisplay();  
   Serial.begin(9600);
  Serial.println("DHTxx test!");

  dht.begin();
  
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); /* Initialize display with address 0x3C */
  display.clearDisplay(); 

   display.setTextSize(1);  /* Select font size of text. Increases with size of argument. */
  display.setTextColor(WHITE);  /* Color of text*/
  
  Serial.begin(115200);
  Serial.println();
 // pinMode(D1,OUTPUT);

  wifiConnect();
  mqttConnect();
}

void loop() {
  {
    display.clearDisplay();  
    delay(2000);
  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
  int h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  int t = dht.readTemperature();
  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
 

}



  if (!client.loop()) {
    mqttConnect();
  }
delay(100);
}

void wifiConnect() {
  Serial.print("Connecting to "); Serial.print(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.print("nWiFi connected, IP address: "); Serial.println(WiFi.localIP());
}

void mqttConnect() {
  if (!client.connected()) {
    Serial.print("Reconnecting MQTT client to "); Serial.println(server);
    while (!client.connect(clientId, authMethod, token)) {
      Serial.print(".");
      delay(500);
    }
    initManagedDevice();
    Serial.println();
  }
}
void initManagedDevice() {
  if (client.subscribe(topic)) {
    Serial.println("subscribe to cmd OK");
  } else {
    Serial.println("subscribe to cmd FAILED");
  }
}
void drawStr(uint8_t x, uint8_t y, char* str){
  display.setCursor(x, y);  // Set x,y coordinates 
  display.println(str);
}

void callback(char* topic, byte* payload, unsigned int payloadLength) {
  Serial.print("callback invoked for topic: "); Serial.println(topic);

  for (int i = 0; i < payloadLength; i++) {
    //Serial.println((char)payload[i]);
    command += (char)payload[i];
  }
Serial.println(command);
 int h = dht.readHumidity();
int t = dht.readTemperature();
if(t >20)
{ 
  drawStr(0,20,"temperature is high");
  display.display();
   delay(5000);
   display.clearDisplay();  
   Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print(" %\t");
  Serial.print("Temperature: ");
  Serial.print(t);
  Serial.println(" *C ");
  sprintf(k, "Humidity: %d", h);
  sprintf(s, "Temperature: %d", t);
 drawStr(0, 0,k);
 drawStr(0,10,s);
display.display();
delay(5000);
  display.clearDisplay();  
  }
else if(t<20)
{  Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print(" %\t");
  Serial.print("Temperature: ");
  Serial.print(t);
  Serial.println(" *C ");
  sprintf(k, "Humidity: %d", h);
  sprintf(s, "Temperature: %d", t);
                                                                                                                                                                                                                                                                                                                            drawStr(0, 0,k);
 drawStr(0,10,s);
display.display();
}
display.clearDisplay();
if(command == "A1"){
  display.clearDisplay();
   display.drawBitmap(0, 0,  myBitmap1, 128, 64, BLACK, WHITE);
   display.display();
   delay(2000);
  //display.clearDisplay();
}
if(command == "A2"){
  display.clearDisplay();
 display.drawBitmap(0, 0,  myBitmap2, 128, 64, BLACK, WHITE);
   display.display();
   delay(2000);
 // display.clearDisplay();
}
if(command == "A3"){
  display.clearDisplay();
 display.drawBitmap(0, 0,  myBitmap3, 128, 64, BLACK, WHITE);
  display.display();
  delay(2000);
   //display.clearDisplay();
}
 if(command == "A4"){
  display.clearDisplay();
 display.drawBitmap(0, 0,  myBitmap4, 128, 64, BLACK, WHITE);
  display.display();
  delay(2000);
   //display.clearDisplay();
}
/*if(command == "ALLON"){
  digitalWrite(D1,HIGH);
  digitalWrite(D2,LOW);
  Serial.println("Light is Switched ON");
}
else if(command == "ALLOFF"){
  digitalWrite(D1,LOW);
  digitalWrite(D2,HIGH);
  Serial.println("Light is Switched OFF");
} */
// Length (with one extra character for the null terminator)
int str_len = command.length() + 1; 

// Prepare the character array (the buffer) 
char c[str_len];

// Copy it over 
command.toCharArray(c, str_len);
//sprintf(c,"%s",command);
Serial.print("c : ");
Serial.println(c);
   display.clearDisplay();
   drawStr(0,10,c);
  display.display();
  
command ="";
}
